{"version":3,"file":"2-snackbar.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["import iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\nimport \"/css/styles.css\";\n\nconst form = document.querySelector(\".form\");\n\nform.addEventListener(\"submit\", onFormSubmit);\nfunction onFormSubmit(event) {\n    event.preventDefault();\n    \n    const delay = Number(form.elements.delay.value);\n    const state = form.elements.state.value;\n\n    createPromise(delay, state)\n\n        .then(result => {\n            iziToast.success({\n                title: ' OK',\n                message: `Fulfilled promise in ${result}ms`,\n                position: 'topRight',\n                iconUrl: '/img/ok.svg',\n                class: 'my-style-toast',\n                titleColor: '#ffffff',\n                messageColor: '#ffffff',\n                iconColor: '#ffffff',\n                timeout: 3000\n            });\n        })\n        .catch (error => {\n                iziToast.error({\n                    title: 'Error',\n                    message: `Rejected promise in ${error}ms`,\n                    position: 'topRight',\n                    iconUrl: '/img/error.svg',\n                    class: 'my-style-toast',\n                    titleColor: '#ffffff',\n                    messageColor: '#ffffff',\n                    iconColor: '#ffffff',\n                    timeout: 3000\n                });\n            });\n\n form.reset();\n}\n\nfunction createPromise(delay, state) {\n    return new Promise((resolve, reject) => {\n        setTimeout(() => {\n            if (state === \"fulfilled\") {\n                resolve(delay);\n            } else {\n                reject(delay);\n            }\n        }, delay);\n    });\n}\n\n\nconst delayInput = document.querySelector('.input-form');\nconst fieldset = document.querySelector('.fieldset');\n\ndelayInput.addEventListener('focus', () => {\n    delayInput.classList.add('pressed');\n});\n\ndelayInput.addEventListener('blur', () => {\n    delayInput.classList.remove('pressed');\n});\n\nconst radioButtons = document.querySelector('input[name=\"state\"]');\n\nradioButtons.forEach(element => {\n    radio.addEventListener('change', () => {\n        fieldset.classList.add('pressed');\n    });\n});\n"],"names":["form","onFormSubmit","event","delay","state","createPromise","result","iziToast","error","resolve","reject","delayInput","fieldset","radioButtons","element"],"mappings":"mIAIA,MAAMA,EAAO,SAAS,cAAc,OAAO,EAE3CA,EAAK,iBAAiB,SAAUC,CAAY,EAC5C,SAASA,EAAaC,EAAO,CACzBA,EAAM,eAAc,EAEpB,MAAMC,EAAQ,OAAOH,EAAK,SAAS,MAAM,KAAK,EACxCI,EAAQJ,EAAK,SAAS,MAAM,MAElCK,EAAcF,EAAOC,CAAK,EAErB,KAAKE,GAAU,CACZC,EAAS,QAAQ,CACb,MAAO,MACP,QAAS,wBAAwBD,CAAM,KACvC,SAAU,WACV,QAAS,cACT,MAAO,iBACP,WAAY,UACZ,aAAc,UACd,UAAW,UACX,QAAS,GACzB,CAAa,CACb,CAAS,EACA,MAAOE,GAAS,CACTD,EAAS,MAAM,CACX,MAAO,QACP,QAAS,uBAAuBC,CAAK,KACrC,SAAU,WACV,QAAS,iBACT,MAAO,iBACP,WAAY,UACZ,aAAc,UACd,UAAW,UACX,QAAS,GAC7B,CAAiB,CACjB,CAAa,EAEZR,EAAK,MAAK,CACX,CAEA,SAASK,EAAcF,EAAOC,EAAO,CACjC,OAAO,IAAI,QAAQ,CAACK,EAASC,IAAW,CACpC,WAAW,IAAM,CACTN,IAAU,YACVK,EAAQN,CAAK,EAEbO,EAAOP,CAAK,CAEnB,EAAEA,CAAK,CAChB,CAAK,CACL,CAGA,MAAMQ,EAAa,SAAS,cAAc,aAAa,EACjDC,EAAW,SAAS,cAAc,WAAW,EAEnDD,EAAW,iBAAiB,QAAS,IAAM,CACvCA,EAAW,UAAU,IAAI,SAAS,CACtC,CAAC,EAEDA,EAAW,iBAAiB,OAAQ,IAAM,CACtCA,EAAW,UAAU,OAAO,SAAS,CACzC,CAAC,EAED,MAAME,EAAe,SAAS,cAAc,qBAAqB,EAEjEA,EAAa,QAAQC,GAAW,CAC5B,MAAM,iBAAiB,SAAU,IAAM,CACnCF,EAAS,UAAU,IAAI,SAAS,CACxC,CAAK,CACL,CAAC"}